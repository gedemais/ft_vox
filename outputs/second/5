--------------------------------------------------------------------------------
Profile data file 'callgrind.out.1922062' (creator: callgrind-3.18.1)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 1830918356
Trigger: Program termination
Profiled target:  ./ft_vox (PID 1922062, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                      
--------------------------------------------------------------------------------
16,013,455,505 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                      file:function
--------------------------------------------------------------------------------
4,033,691,930 (25.19%)  src/generation/caves.c:dist [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
3,241,616,424 (20.24%)  src/generation/caves.c:worley_noise [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
2,974,476,838 (18.57%)  src/generation/caves.c:get_lowest [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  545,268,485 ( 3.41%)  ???:paethPredictor [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  537,667,532 ( 3.36%)  ???:unfilterScanline [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  491,913,650 ( 3.07%)  ./math/./math/w_sqrt_compat.c:sqrt [/usr/lib/x86_64-linux-gnu/libm.so.6]
  458,347,857 ( 2.86%)  ???:lodepng_memcpy [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  360,739,765 ( 2.25%)  ???:ft_memcpy [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  295,148,190 ( 1.84%)  ./math/../sysdeps/ieee754/dbl-64/e_sqrt.c:__sqrt_finite@GLIBC_2.15 [/usr/lib/x86_64-linux-gnu/libm.so.6]
  243,420,100 ( 1.52%)  src/generation/caves.c:generate_cave_map [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  217,867,238 ( 1.36%)  src/generation/vertexs.c:push_plane [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  196,765,460 ( 1.23%)  ???:0x000000000011d750 [???]
  195,575,788 ( 1.22%)  ???:update_adler32 [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  177,029,503 ( 1.11%)  ???:ft_memset [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  152,114,241 ( 0.95%)  ???:lodepng_memset [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  138,669,827 ( 0.87%)  ???:inflateHuffmanBlock [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  137,035,776 ( 0.86%)  src/generation/noise.c:noise2 [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  132,185,442 ( 0.83%)  ???:getPixelColorsRGBA8 [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  125,829,120 ( 0.79%)  ???:readBitFromReversedStream [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
  124,952,006 ( 0.78%)  ???:0x000000000002e320 [/usr/lib/x86_64-linux-gnu/libGLX_mesa.so.0.0.0]
   88,377,054 ( 0.55%)  src/generation/vertexs.c:switch_block_type [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   83,632,128 ( 0.52%)  src/generation/noise.c:noise2d [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   72,548,352 ( 0.45%)  src/generation/noise.c:smooth_inter [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   72,406,500 ( 0.45%)  ???:dynarray_push [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   67,108,864 ( 0.42%)  ???:readBitsFromReversedStream [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   56,180,104 ( 0.35%)  ???:0x00000000000315c0 [/usr/lib/x86_64-linux-gnu/libGLX_mesa.so.0.0.0]
   37,489,915 ( 0.23%)  ???:ensureBits32 [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   36,274,187 ( 0.23%)  src/singletons.c:map_seed [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   36,274,176 ( 0.23%)  src/generation/noise.c:lin_inter [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   36,106,240 ( 0.23%)  src/generation/noise.c:perlin2d_a [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   33,554,315 ( 0.21%)  ???:check_space [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   29,229,382 ( 0.18%)  ./malloc/./malloc/malloc.c:_int_malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
   25,580,097 ( 0.16%)  src/generation/vertexs.c:generate_side_plane [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   25,149,565 ( 0.16%)  src/generation/vertexs.c:generate_fall [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   21,779,664 ( 0.14%)  ???:huffmanDecodeSymbol [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   21,595,304 ( 0.13%)  ???:0x00000000000af820 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
   20,166,208 ( 0.13%)  ???:0x00000000000b0040 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
   20,123,349 ( 0.13%)  ./elf/./elf/dl-lookup.c:do_lookup_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
   19,617,474 ( 0.12%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
   18,684,365 ( 0.12%)  ./malloc/./malloc/malloc.c:_int_free [/usr/lib/x86_64-linux-gnu/libc.so.6]
   16,939,986 ( 0.11%)  ???:advanceBits [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   14,595,654 ( 0.09%)  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S:__strcmp_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   12,099,990 ( 0.08%)  ???:peekBits [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   11,765,721 ( 0.07%)  ???:vec_add [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   11,507,623 ( 0.07%)  ???:HuffmanTree_makeTable [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
   11,212,446 ( 0.07%)  ./malloc/./malloc/malloc.c:malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
   10,342,400 ( 0.06%)  src/generation/vertexs.c:generate_top_plane [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    9,615,132 ( 0.06%)  ???:vec_fmult [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    8,849,618 ( 0.06%)  ???:lodepng_crc32 [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    8,237,714 ( 0.05%)  ???:0x0000000000da2400 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    7,344,369 ( 0.05%)  ./malloc/./malloc/malloc.c:malloc_consolidate [/usr/lib/x86_64-linux-gnu/libc.so.6]
    7,295,127 ( 0.05%)  ./elf/./elf/dl-lookup.c:_dl_lookup_symbol_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    7,189,079 ( 0.04%)  src/generation/vertexs.c:generate_deep_fall [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    6,985,470 ( 0.04%)  ???:0x0000000000016f60 [/usr/lib/x86_64-linux-gnu/libexpat.so.1.8.7]
    6,518,720 ( 0.04%)  ???:ensureBits25 [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    6,491,383 ( 0.04%)  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:__memset_avx2_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
    5,889,843 ( 0.04%)  ???:0x0000000000d1f070 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    5,889,185 ( 0.04%)  ???:0x0000000000013430 [/usr/lib/x86_64-linux-gnu/libexpat.so.1.8.7]
    5,714,641 ( 0.04%)  ???:0x0000000000eb0890 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    5,519,248 ( 0.03%)  ???:0x0000000000deb9b0 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    5,239,375 ( 0.03%)  src/generation/height_map.c:generate_height_map [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    4,926,900 ( 0.03%)  src/generation/generation.c:generate_surface_vertexs [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    4,645,090 ( 0.03%)  ???:0x0000000000012e30 [/usr/lib/x86_64-linux-gnu/libexpat.so.1.8.7]
    4,477,730 ( 0.03%)  ./elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object
    4,318,787 ( 0.03%)  ./malloc/./malloc/malloc.c:free [/usr/lib/x86_64-linux-gnu/libc.so.6]
    4,210,421 ( 0.03%)  ./malloc/./malloc/malloc.c:unlink_chunk.constprop.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    3,833,492 ( 0.02%)  ???:0x0000000000eb3b70 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    3,802,394 ( 0.02%)  ???:readBits [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    3,583,525 ( 0.02%)  ./nptl/./nptl/pthread_mutex_lock.c:pthread_mutex_lock@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    3,310,950 ( 0.02%)  src/generation/caves.c:allocate_cave_map [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    3,181,435 ( 0.02%)  ???:0x0000000000d1e310 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    2,930,603 ( 0.02%)  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S:__strncmp_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    2,641,489 ( 0.02%)  ???:0x0000000000dea2b0 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    2,525,860 ( 0.02%)  ???:0x0000000000046dd0 [/usr/lib/x86_64-linux-gnu/libGLX_mesa.so.0.0.0]
    2,451,614 ( 0.02%)  ./nptl/./nptl/pthread_mutex_unlock.c:pthread_mutex_unlock@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    2,423,919 ( 0.02%)  ./elf/./elf/do-rel.h:_dl_relocate_object
    2,364,530 ( 0.01%)  src/generation/water.c:generate_water [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]
    2,300,831 ( 0.01%)  ???:0x0000000000e13590 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    2,264,988 ( 0.01%)  ???:0x0000000000164560 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    2,262,104 ( 0.01%)  ???:0x000000000020c3e0 [/usr/lib/x86_64-linux-gnu/dri/iris_dri.so]
    2,113,185 ( 0.01%)  ???:0x0000000000017810 [/usr/lib/x86_64-linux-gnu/libGLX.so.0.0.0]
    2,101,783 ( 0.01%)  src/init/init_world.c:init_biomes [/mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/ft_vox]

--------------------------------------------------------------------------------
-- Auto-annotated source: src/generation/height_map.c
--------------------------------------------------------------------------------
Ir                 

        .           #include "main.h"
        .           
        .           static	uint8_t	**allocate_height_map(unsigned int size)
      150 ( 0.00%)  {
        .           	uint8_t	**new;
        .           
      175 ( 0.00%)  	if (!(new = (uint8_t**)malloc(sizeof(uint8_t*) * size)))
   13,303 ( 0.00%)  => ???:0x000000000011d530 (25x)
        .           		return (NULL);
        .           
    6,525 ( 0.00%)  	for (unsigned int i = 0; i < size; i++)
        .           	{
   17,600 ( 0.00%)  		if (!(new[i] = (uint8_t*)malloc(sizeof(uint8_t) * size)))
  348,618 ( 0.00%)  => ???:0x000000000011d530 (1,600x)
        .           			return (NULL);
   14,400 ( 0.00%)  		ft_memset(new[i], 0, sizeof(uint8_t) * size);
  166,400 ( 0.00%)  => ???:ft_memset (1,600x)
        .           	}
        .           
       25 ( 0.00%)  	return (new);
       75 ( 0.00%)  }
        .           
        .           uint8_t	**generate_height_map(t_biome_params params, int x_start, int z_start, unsigned int size, unsigned char offset)
      400 ( 0.00%)  {
        .           	uint8_t	**hmap;
        .           	uint8_t	height;
        .           	unsigned int	xbound, zbound;
        .           
      150 ( 0.00%)  	if (!(hmap = allocate_height_map(size)))
  567,271 ( 0.00%)  => src/generation/height_map.c:allocate_height_map (25x)
        .           		return (NULL);
        .           
      100 ( 0.00%)  	xbound = x_start + size;
      100 ( 0.00%)  	zbound = z_start + size;
        .           
    6,550 ( 0.00%)  	for (unsigned int x = x_start; x < xbound; x++)
  419,200 ( 0.00%)  		for (unsigned int z = z_start; z < zbound; z++)
        .           		{
3,072,000 ( 0.02%)  			height = (uint8_t)(perlin2d_a((float)x, (float)z, params.frequency, params.depth) * size);
245,043,200 ( 1.53%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/noise.c:perlin2d_a (102,400x)
1,740,800 ( 0.01%)  			hmap[x - x_start][z - z_start] = height + offset;
        .           		}
       25 ( 0.00%)  	return (hmap);
       50 ( 0.00%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/generation/water.c
--------------------------------------------------------------------------------
Ir                 

        .           # include "main.h"
        .           
        .           const uint8_t	third = (BTB_BEACH - BTB_CAVE) / 3;
        .           const uint8_t	water_level = BTB_BEACH - third;
        .           
        .           static bool		is_water(uint8_t y)
  512,000 ( 0.00%)  {
  307,200 ( 0.00%)  	return (y < water_level);
  204,800 ( 0.00%)  }
        .           
        .           static unsigned char	pour_water(t_chunk *chunk, unsigned int x, unsigned int y, unsigned int z)
  152,515 ( 0.00%)  {
        .           	vec3			top_plane[6];
        .           	float			xx, yy, zz;
        .           	vec3			a, b, c, d;
        .           	unsigned char	code;
        .           
   97,055 ( 0.00%)  	xx = x;
   97,055 ( 0.00%)  	yy = y;
   97,055 ( 0.00%)  	zz = z;
        .           
        .           	// Cube's top plane ABCD points
  180,245 ( 0.00%)  	a = (vec3){xx, yy, (z + 1)};
  277,300 ( 0.00%)  	b = (vec3){(x + 1), yy, (z + 1)};
   83,190 ( 0.00%)  	c = (vec3){xx, yy, zz};
  180,245 ( 0.00%)  	d = (vec3){(x + 1), yy, zz};
        .           
   55,460 ( 0.00%)  	top_plane[0] = c;
   55,460 ( 0.00%)  	top_plane[1] = a;
   55,460 ( 0.00%)  	top_plane[2] = b;
   55,460 ( 0.00%)  	top_plane[3] = c;
   55,460 ( 0.00%)  	top_plane[4] = b;
   55,460 ( 0.00%)  	top_plane[5] = d;
        .           
  152,515 ( 0.00%)  	return (push_plane(chunk, top_plane, N_UP, y, 1.0f, false, true));
28,825,335 ( 0.18%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/vertexs.c:push_plane (13,865x)
   69,325 ( 0.00%)  }
        .           
        .           unsigned char			generate_water(t_chunk *chunk)
      125 ( 0.00%)  {
        .           	unsigned char	code;
        .           	unsigned int	y;
        .           
    4,900 ( 0.00%)  	for (unsigned int x = 0; x < CHUNK_SIZE; x++)
  313,600 ( 0.00%)  		for (unsigned int z = 0; z < CHUNK_SIZE; z++)
        .           		{
1,126,400 ( 0.01%)  			y = chunk->surface_hmap[x][z];
  919,430 ( 0.01%)  			if (is_water(y) && (code = pour_water(chunk, chunk->x_start + x, water_level - 1, chunk->z_start + z)))
30,544,595 ( 0.19%)  => src/generation/water.c:pour_water (13,865x)
1,024,000 ( 0.01%)  => src/generation/water.c:is_water (102,400x)
        .           				return (code);
        .           		}
       25 ( 0.00%)  	return (ERR_NONE);
       50 ( 0.00%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/init/init_world.c
--------------------------------------------------------------------------------
Ir                 

-- line 13 ----------------------------------------
        .           	seed = ft_atoi(argv[1]);
        .           
        .           	*map_seed() = seed;
        .           
        .           	return (ERR_NONE);
        .           }
        .           
        .           static unsigned char	init_biomes(t_env *env)
        6 ( 0.00%)  {
        9 ( 0.00%)  	if (!(env->model.biomes = (float**)malloc(MAP_SIZE * sizeof(float*))))
   20,920 ( 0.00%)  => ???:0x000000000011d530 (1x)
        .           		return (ERR_MALLOC_FAILED);
        .           
      772 ( 0.00%)  	for (unsigned int x = 0; x < MAP_SIZE; x++)
        .           	{
    2,816 ( 0.00%)  		if (!(env->model.biomes[x] = (float*)malloc(MAP_SIZE * sizeof(float))))
  119,160 ( 0.00%)  => ???:0x000000000011d530 (256x)
        .           			return (ERR_MALLOC_FAILED);
        .           
  197,632 ( 0.00%)  		for (unsigned int y = 0; y < MAP_SIZE; y++)
1,900,544 ( 0.01%)  			env->model.biomes[x][y] = perlin2d_a((float)x, (float)y, 0.1f, 6.0f);
156,827,710 ( 0.98%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/noise.c:perlin2d_a (65,536x)
        .           	}
        1 ( 0.00%)  	return (ERR_NONE);
        3 ( 0.00%)  }
        .           
        .           static unsigned char	init_map(t_env *env)
        5 ( 0.00%)  {
        .           	unsigned char	code;
        .           	int				x_start, z_start;
        .           
        2 ( 0.00%)  	env->model.square_x = (MAP_SIZE - SQUARE_SIZE) / 2;
        2 ( 0.00%)  	env->model.square_z = (MAP_SIZE - SQUARE_SIZE) / 2;
       19 ( 0.00%)  	for (unsigned int x = 0; x < SQUARE_SIZE; x++)
        .           	{
       30 ( 0.00%)  		printf("line %u done\n", x);
    5,402 ( 0.00%)  => ???:0x000000000011d410 (5x)
       95 ( 0.00%)  		for (unsigned int z = 0; z < SQUARE_SIZE; z++)
        .           		{
      175 ( 0.00%)  			x_start = (env->model.square_x + x) * CHUNK_SIZE;
      175 ( 0.00%)  			z_start = (env->model.square_z + z) * CHUNK_SIZE;
      525 ( 0.00%)  			if ((code = gen_chunk(env, &env->model.chunks[x][z], x_start, z_start, true)))
12,757,153,052 (79.67%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/generation.c:gen_chunk (25x)
        .           				return (code);
        .           		}
        .           	}
        .           
       19 ( 0.00%)  	for (unsigned int x = 0; x < SQUARE_SIZE; x++)
       95 ( 0.00%)  		for (unsigned int z = 0; z < SQUARE_SIZE; z++)
      225 ( 0.00%)  			if ((code = fix_chunk_borders(env, x, z)) != ERR_NONE
12,552,170 ( 0.08%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/borders.c:fix_chunk_borders (25x)
      425 ( 0.00%)  				|| (code = generate_water(&env->model.chunks[x][z])))
33,933,125 ( 0.21%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/water.c:generate_water (25x)
        .           				return (code);
        .           
       18 ( 0.00%)  	printf("%zu bytes per vertex | %.2f Mo on heap\n", sizeof(t_stride), *stride_bytesize() / 1000000.0f);
    2,994 ( 0.00%)  => ???:0x000000000011d410 (1x)
        6 ( 0.00%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/generation.c:stride_bytesize (1x)
        1 ( 0.00%)  	return (ERR_NONE);
        2 ( 0.00%)  }
        .           
        .           unsigned char			init_world(t_env *env, int argc, char **argv)
        7 ( 0.00%)  {
        .           	unsigned char	code;
        .           
        2 ( 0.00%)  	if ((argc > 1 && (code = read_seed(argc, argv)) != ERR_NONE)
        6 ( 0.00%)  		|| (code = init_biomes(env)) != ERR_NONE
159,069,573 ( 0.99%)  => src/init/init_world.c:init_biomes (1x)
        6 ( 0.00%)  		|| (code = init_map(env)) != ERR_NONE)
12,803,648,562 (79.96%)  => src/init/init_world.c:init_map (1x)
        .           		return (code);
        .           
        7 ( 0.00%)  	printf("seed : %d\n", *map_seed());
    1,044 ( 0.00%)  => ???:0x000000000011d410 (1x)
        9 ( 0.00%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/singletons.c:map_seed (1x)
        .           
        6 ( 0.00%)  	if ((code = model(env)) != ERR_NONE)
  425,881 ( 0.00%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/init/model.c:model (1x)
        .           		return (code);
        .           
        3 ( 0.00%)  	camera(env); // camera after load settings cause we need ww and wh
   27,218 ( 0.00%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/init/camera.c:camera (1x)
        .           	// camera before light because we need campos
        3 ( 0.00%)  	light(env);
      244 ( 0.00%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/init/light.c:light (1x)
        .           
        1 ( 0.00%)  	return (ERR_NONE);
        2 ( 0.00%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/generation/caves.c
--------------------------------------------------------------------------------
Ir                     

            .           #include "main.h"
            .           #include "immintrin.h"
            .           
            .           static	uint8_t	***allocate_cave_map(unsigned int size)
          150 ( 0.00%)  {
            .           	uint8_t	***new;
            .           
          175 ( 0.00%)  	if (!(new = (uint8_t***)malloc(sizeof(uint8_t**) * size)))
        5,253 ( 0.00%)  => ???:0x000000000011d530 (25x)
            .           		return (NULL);
            .           
        6,525 ( 0.00%)  	for (unsigned int i = 0; i < size; i++)
            .           	{
       19,200 ( 0.00%)  		if (!(new[i] = (uint8_t**)malloc(sizeof(uint8_t*) * size)))
      347,191 ( 0.00%)  => ???:0x000000000011d530 (1,600x)
            .           			return (NULL);
            .           
      417,600 ( 0.00%)  		for (unsigned int j = 0; j < size; j++)
            .           		{
    1,536,000 ( 0.01%)  			if (!(new[i][j] = (uint8_t*)malloc(sizeof(uint8_t) * size)))
   22,643,512 ( 0.14%)  => ???:0x000000000011d530 (102,400x)
            .           				return (NULL);
    1,331,200 ( 0.01%)  			ft_memset(new[i][j], 0, sizeof(uint8_t) * size);
   10,649,600 ( 0.07%)  => ???:ft_memset (102,400x)
            .           		}
            .           
            .           	}
           25 ( 0.00%)  	return (new);
           75 ( 0.00%)  }
            .           
            .           static unsigned char	init_worley_points(t_3dpoint points[NB_WORLEY_DOTS], unsigned int size)
          150 ( 0.00%)  {
        2,500 ( 0.00%)  	for (unsigned int i = 0; i < NB_WORLEY_DOTS; i++)
            .           	{
        9,600 ( 0.00%)  		points[i].x = rand() % size;
       47,896 ( 0.00%)  => ???:0x000000000011d720 (800x)
        9,600 ( 0.00%)  		points[i].y = rand() % size;
       47,900 ( 0.00%)  => ???:0x000000000011d720 (800x)
        9,600 ( 0.00%)  		points[i].z = rand() % size;
       47,896 ( 0.00%)  => ???:0x000000000011d720 (800x)
            .           	}
           25 ( 0.00%)  	return (ERR_NONE);
           50 ( 0.00%)  }
            .           
            .           static int	dist(t_3dpoint a, t_3dpoint b)
  590,296,380 ( 3.69%)  {
  590,296,380 ( 3.69%)  	int	dx = b.x - a.x;
  590,296,380 ( 3.69%)  	int	dy = b.y - a.y;
  590,296,380 ( 3.69%)  	int	dz = b.z - a.z;
            .           
1,475,740,950 ( 9.22%)  	return (sqrt((dx * dx) + (dy * dy) + (dz * dz)));
  983,827,300 ( 6.14%)  => ???:0x000000000011d750 (98,382,730x)
  196,765,460 ( 1.23%)  }
            .           
            .           static float	get_lowest(int distances[NB_WORLEY_DOTS], float *offset, int *index)
   39,321,600 ( 0.25%)  {
    6,553,600 ( 0.04%)  	int	lowest = INT_MAX;
            .           
  655,360,000 ( 4.09%)  	for (int i = 0; i < NB_WORLEY_DOTS; i++)
1,677,721,600 (10.48%)  		if (lowest > distances[i])
            .           		{
  310,530,348 ( 1.94%)  			*offset = lowest - distances[i];
  181,142,703 ( 1.13%)  			lowest = distances[i];
   77,632,587 ( 0.48%)  			*index = i;
            .           		}
            .           
   13,107,200 ( 0.08%)  	return (lowest);
   13,107,200 ( 0.08%)  }
            .           
            .           static unsigned char	worley_noise(t_3dpoint points[NB_WORLEY_DOTS], int distances[NB_WORLEY_DOTS], t_3dpoint current, uint8_t *res)
   58,982,400 ( 0.37%)  {
            .           	static float	offset = 0;
            .           	static int		index = 0;
            .           	float			d;
            .           
   19,660,800 ( 0.12%)  	if (offset > WORLEY_THRESHOLD / 2)
  111,332,470 ( 0.70%)  		distances[index] = dist(current, points[index]);
  183,159,870 ( 1.14%)  => src/generation/caves.c:dist (3,591,370x)
            .           	else
  296,223,000 ( 1.85%)  		for (unsigned int i = 0; i < NB_WORLEY_DOTS; i++)
2,654,158,080 (16.57%)  			distances[i] = dist(current, points[i]);
4,834,359,360 (30.19%)  => src/generation/caves.c:dist (94,791,360x)
            .           
   52,428,800 ( 0.33%)  	d = get_lowest(distances, &offset, &index);
2,974,476,838 (18.57%)  => src/generation/caves.c:get_lowest (6,553,600x)
            .           
            .           
   19,660,800 ( 0.12%)  	if (d > WORLEY_THRESHOLD)
    2,955,674 ( 0.02%)  		*res = BT_STONE;
            .           
    6,553,600 ( 0.04%)  	return (ERR_NONE);
   19,660,800 ( 0.12%)  }
            .           
            .           static unsigned char	generate_cave_side_plane(t_chunk *chunk, t_3dpoint pos, unsigned char orientation)
            .           {
            .           	vec3	cave_planes[N_MAX][4] = {
            .           		[N_NORTH] = {	(vec3){pos.x, pos.y, pos.z + 1},
            .           						(vec3){pos.x + 1, pos.y, pos.z + 1},
            .           						(vec3){pos.x, pos.y - 1, pos.z + 1},
            .           						(vec3){pos.x + 1, pos.y - 1, pos.z + 1}},
-- line 89 ----------------------------------------
-- line 139 ----------------------------------------
            .           				(void)chunk;
            .           			break;
            .           		}
            .           	}
            .           	return (code);
            .           }
            .           
            .           unsigned char			generate_cave_map(t_chunk *chunk, unsigned int size)
          225 ( 0.00%)  {
            .           	t_3dpoint		points[NB_WORLEY_DOTS];
            .           	int				distances[NB_WORLEY_DOTS];
            .           	unsigned char	code;
            .           
          225 ( 0.00%)  	if (!(chunk->cave_map = allocate_cave_map(size))
   36,956,506 ( 0.23%)  => src/generation/caves.c:allocate_cave_map (25x)
          175 ( 0.00%)  		|| init_worley_points(points, size) != ERR_NONE)
      175,217 ( 0.00%)  => src/generation/caves.c:init_worley_points (25x)
            .           		return (ERR_MALLOC_FAILED);
            .           
        6,525 ( 0.00%)  	for (unsigned int x = 0; x < size; x++)
      417,600 ( 0.00%)  		for (unsigned int y = 0; y < size; y++)
   26,726,400 ( 0.17%)  			for (unsigned int z = 0; z < size; z++)
  216,268,800 ( 1.35%)  				if ((code = worley_noise(points, distances, (t_3dpoint){x, y, z}, &chunk->cave_map[x][y][z])))
11,233,612,492 (70.15%)  => src/generation/caves.c:worley_noise (6,553,600x)
            .           					return (code);
            .           
            .           	/*
            .           	for (unsigned int x = 0; x < size; x++)
            .           	{
            .           		for (unsigned int y = 0; y < size; y++)
            .           		{
            .           			for (unsigned int z = 0; z < size; z++)
-- line 167 ----------------------------------------
-- line 172 ----------------------------------------
            .           			printf("\n");
            .           		}
            .           		usleep(100000);
            .           		printf("\n");
            .           	}
            .           
            .           	fflush(stdout);*/
            .           
           25 ( 0.00%)  	return (ERR_NONE);
          125 ( 0.00%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/generation/generation.c
--------------------------------------------------------------------------------
Ir                 

-- line 50 ----------------------------------------
        .           					&& (code = generate_cave_planes(chunk, neighbours, x, y, z, x_start, z_start)))
        .           					return (code);
        .           			}
        .           
        .           	return (ERR_NONE);
        .           }*/
        .           
        .           static unsigned char	generate_surface_vertexs(t_chunk *chunk, int x_start, int z_start)
      250 ( 0.00%)  {
        .           	unsigned int	y;
        .           	vec3			top_plane[6];
        .           	unsigned char	code;
        .           
    4,900 ( 0.00%)  	for (unsigned int x = 0; x < CHUNK_SIZE; x++)
  313,600 ( 0.00%)  		for (unsigned int z = 0; z < CHUNK_SIZE; z++)
        .           		{
1,126,400 ( 0.01%)  			y = chunk->surface_hmap[x][z];
        .           
1,843,200 ( 0.01%)  			if ((code = generate_top_plane(chunk, x + x_start, y, z + z_start, top_plane)) != ERR_NONE
289,327,141 ( 1.81%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/vertexs.c:generate_top_plane (102,400x)
1,638,400 ( 0.01%)  				|| (code = generate_side_plane(chunk, chunk->surface_hmap, x, y, z, CHUNK_SIZE, top_plane)) != ERR_NONE)
653,616,142 ( 4.08%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/vertexs.c:generate_side_plane (102,400x)
        .           				return (code);
        .           		}
       25 ( 0.00%)  	return (ERR_NONE);
      125 ( 0.00%)  }
        .           
        .           unsigned char	generate_vertexs(t_chunk *chunk, int x_start, int z_start)
      175 ( 0.00%)  {
        .           	unsigned char	code;
        .           
      225 ( 0.00%)  	if ((code = generate_surface_vertexs(chunk, x_start, z_start)))
947,870,183 ( 5.92%)  => src/generation/generation.c:generate_surface_vertexs (25x)
        .           //		|| (code = generate_cave_vertexs(chunk, x_start, z_start)))
        .           		return (code);
       25 ( 0.00%)  	return (ERR_NONE);
       50 ( 0.00%)  }
        .           
        .           static unsigned char	generate_chunk_content(t_env *env, t_chunk *chunk, int x_start, int z_start, bool stride)
      250 ( 0.00%)  {
        .           	unsigned char	code;
      200 ( 0.00%)  	t_biome_params	surface_params = {0.02f, 6.0f, 0.0f, 0.0f};
      200 ( 0.00%)  	t_biome_params	sub_params = {0.05f, 6.0f, 0.0f, 40.0f};
        .           
       75 ( 0.00%)  	chunk->x_start = x_start;
       75 ( 0.00%)  	chunk->z_start = z_start;
        .           
        .           	(void)env;
      100 ( 0.00%)  	if (!chunk->surface_hmap || !chunk->cave_map)
        .           	{
        .           		// Load parameters for the current chunk
        .           		//printf("frequency : %f | depth : %f\n", params.frequency, params.depth);
        .           		// Generate height maps for surface and cave
        .           		// Topography type should be a parameter which would affect perlin noise generation
      400 ( 0.00%)  		if (!(chunk->surface_hmap = generate_height_map(surface_params, x_start, z_start, CHUNK_SIZE, 40))
250,849,846 ( 1.57%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/height_map.c:generate_height_map (25x)
      175 ( 0.00%)  			|| (code = generate_cave_map(chunk, CHUNK_SIZE)))
11,514,164,315 (71.90%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/generation/caves.c:generate_cave_map (25x)
        .           			return (ERR_MALLOC_FAILED);
        .           	}
        .           
       50 ( 0.00%)  	if (stride)
        .           	{
      225 ( 0.00%)  		if (stride && dynarray_init(&chunk->stride, sizeof(t_stride), CHUNK_SIZE * CHUNK_SIZE * 6 * 2))
44,265,183 ( 0.28%)  => ???:dynarray_init (25x)
        .           			return (ERR_MALLOC_FAILED);
        .           
      275 ( 0.00%)  		if (stride && (code = generate_vertexs(chunk, x_start, z_start)) != ERR_NONE)
947,870,658 ( 5.92%)  => src/generation/generation.c:generate_vertexs (25x)
        .           			return (code);
        .           	}
        .           
       25 ( 0.00%)  	return (ERR_NONE);
       50 ( 0.00%)  }
        .           
        .           // This function will be used to generate new chunks of terrain with different noise algorithms
        .           
        .           size_t	*stride_bytesize(void)
       78 ( 0.00%)  {
        .           	static size_t	bytesize = 0;
        .           
       26 ( 0.00%)  	return (&bytesize);
       52 ( 0.00%)  }
        .           
        .           unsigned char			gen_chunk(t_env *env, t_chunk *chunk, int x_start, int z_start, bool stride)
      250 ( 0.00%)  {
        .           	unsigned char	code;
        .           
      275 ( 0.00%)  	if ((code = generate_chunk_content(env, chunk, x_start, z_start, stride)) != ERR_NONE)
12,757,152,102 (79.67%)  => src/generation/generation.c:generate_chunk_content (25x)
        .           		return (code);
        .           
      200 ( 0.00%)  	*stride_bytesize() += sizeof(t_stride) * chunk->stride.nb_cells;
      150 ( 0.00%)  => src/generation/generation.c:stride_bytesize (25x)
       25 ( 0.00%)  	return (ERR_NONE);
       50 ( 0.00%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/generation/noise.c
--------------------------------------------------------------------------------
Ir                  

-- line 11 ----------------------------------------
         .                                228,108,245,148,140,40,35,195,38,58,65,207,215,253,65,85,208,76,62,3,237,55,89,
         .                                232,50,217,64,244,157,199,121,252,90,17,212,203,149,152,140,187,234,177,73,174,
         .                                193,100,192,143,97,53,145,135,19,103,13,90,135,151,199,91,239,247,33,39,145,
         .                                101,120,99,3,186,86,99,41,237,203,111,79,220,135,158,42,30,154,120,67,87,167,
         .                                135,176,183,191,253,115,184,21,233,58,129,233,142,39,128,211,118,137,139,255,
         .                                114,20,218,113,154,27,127,246,250,1,8,198,250,209,92,222,173,21,88,102,219};
         .           
         .           static int noise2(int x, int y)
24,182,784 ( 0.15%)  {
56,426,496 ( 0.35%)      int tmp = hash[(y + *map_seed()) % 256];
36,274,238 ( 0.23%)  => /mnt/nfs/homes/gedemais/Desktop/projects/ft_vox/src/singletons.c:map_seed (4,030,464x)
48,365,568 ( 0.30%)      return hash[(tmp + x) % 256];
 8,060,928 ( 0.05%)  }
         .           
         .           static float lin_inter(float x, float y, float s)
18,137,088 ( 0.11%)  {
12,091,392 ( 0.08%)      return x + s * (y-x);
 6,045,696 ( 0.04%)  }
         .           
         .           static float smooth_inter(float x, float y, float s)
21,159,936 ( 0.13%)  {
45,342,720 ( 0.28%)      return lin_inter(x, y, s * s * (3-2*s));
36,274,176 ( 0.23%)  => src/generation/noise.c:lin_inter (3,022,848x)
 6,045,696 ( 0.04%)  }
         .           
         .           static float noise2d(float x, float y)
 6,045,696 ( 0.04%)  {
 3,022,848 ( 0.02%)      int x_int = x;
 3,022,848 ( 0.02%)      int y_int = y;
 5,038,080 ( 0.03%)      float x_frac = x - x_int;
 5,038,080 ( 0.03%)      float y_frac = y - y_int;
 6,045,696 ( 0.04%)      int s = noise2(x_int, y_int);
43,327,550 ( 0.27%)  => src/generation/noise.c:noise2 (1,007,616x)
 7,053,312 ( 0.04%)      int t = noise2(x_int+1, y_int);
43,327,488 ( 0.27%)  => src/generation/noise.c:noise2 (1,007,616x)
 7,053,312 ( 0.04%)      int u = noise2(x_int, y_int+1);
43,327,488 ( 0.27%)  => src/generation/noise.c:noise2 (1,007,616x)
 8,060,928 ( 0.05%)      int v = noise2(x_int+1, y_int+1);
43,327,488 ( 0.27%)  => src/generation/noise.c:noise2 (1,007,616x)
12,091,392 ( 0.08%)      float low = smooth_inter(s, t, x_frac);
36,274,176 ( 0.23%)  => src/generation/noise.c:smooth_inter (1,007,616x)
12,091,392 ( 0.08%)      float high = smooth_inter(u, v, x_frac);
36,274,176 ( 0.23%)  => src/generation/noise.c:smooth_inter (1,007,616x)
 7,053,312 ( 0.04%)      return smooth_inter(low, high, y_frac);
36,274,176 ( 0.23%)  => src/generation/noise.c:smooth_inter (1,007,616x)
 2,015,232 ( 0.01%)  }
         .           
         .           float perlin2d_a(float x, float y, float freq, int depth) // 0.1f, 4.0f
 1,343,488 ( 0.01%)  {
   503,808 ( 0.00%)      float xa = x*freq;
   503,808 ( 0.00%)      float ya = y*freq;
   335,872 ( 0.00%)      float amp = 1.0;
   335,872 ( 0.00%)      float fin = 0;
   335,872 ( 0.00%)      float div = 0.0;
         .           
         .               int i;
 4,870,144 ( 0.03%)      for(i=0; i<depth; i++)
         .               {
 6,045,696 ( 0.04%)          div += 256 * amp;
11,083,776 ( 0.07%)          fin += noise2d(xa, ya) * amp;
365,764,670 ( 2.28%)  => src/generation/noise.c:noise2d (1,007,616x)
 4,030,464 ( 0.03%)          amp /= 2;
 3,022,848 ( 0.02%)          xa *= 2;
 3,022,848 ( 0.02%)          ya *= 2;
         .               }
         .           
   335,872 ( 0.00%)      return fin/div;
   335,872 ( 0.00%)  }
         .           
         .           ///////////////////////////////////

--------------------------------------------------------------------------------
-- Auto-annotated source: src/singletons.c
--------------------------------------------------------------------------------
Ir                  

         .           #include "main.h"
         .           
         .           int		*map_seed(void)
12,091,395 ( 0.08%)  {
         .           	static int seed = -1;
         .           
12,091,395 ( 0.08%)  	if (seed == -1)
         2 ( 0.00%)  		seed = rand();
        60 ( 0.00%)  => ???:0x000000000011d720 (1x)
         .           
 4,030,465 ( 0.03%)  	return (&seed);
 8,060,930 ( 0.05%)  }
         .           

--------------------------------------------------------------------------------
-- Auto-annotated source: src/generation/vertexs.c
--------------------------------------------------------------------------------
Ir                  

-- line 8 ----------------------------------------
         .             (byte & 0x10 ? '1' : '0'), \
         .             (byte & 0x08 ? '1' : '0'), \
         .             (byte & 0x04 ? '1' : '0'), \
         .             (byte & 0x02 ? '1' : '0'), \
         .             (byte & 0x01 ? '1' : '0')
         .           
         .           
         .           static int	switch_block_type(unsigned int z)
 3,747,672 ( 0.02%)  {
68,395,014 ( 0.43%)  	const unsigned int	bounds[BTB_MAX][2] ={
         .           											{BTB_CAVE, BT_STONE},
         .           											{BTB_BEACH, BT_SAND},
         .           											{BTB_SOIL, BT_GROUND},
         .           											{BTB_PLAIN, BT_GRASS},
         .           											{BTB_MOUTAIN, BT_STONE},
         .           											{BTB_HIGH_MOUTAINS, BT_SNOW}
         .           											};
         .           
 5,619,132 ( 0.04%)  	for (unsigned int i = 0; i < BTB_MAX; i++)
 6,867,564 ( 0.04%)  		if (z < bounds[i][0])
 1,405,377 ( 0.01%)  			return (bounds[i][1]);
         .           
         .           	return (BT_WATER);
 2,342,295 ( 0.01%)  }
         .           
         .           unsigned char	push_plane(t_chunk *chunk, const vec3 plane[6], uint8_t normal, unsigned int y, float fall_size, bool side, bool water)
 5,592,137 ( 0.03%)  {
         .           	/*
         .           	const t_vt		vts_ccw[6] = {
         .           		(t_vt){1, fall_size},	// A
         .           		(t_vt){1, 0},			// B
         .           		(t_vt){0, 0},			// C
         .           
         .           		(t_vt){1, fall_size},	// D
         .           		(t_vt){0, 0},			// E
-- line 42 ----------------------------------------
-- line 51 ----------------------------------------
         .           		(t_vt){0, fall_size},	// F
         .           		(t_vt){0, 0},			// E
         .           	};
         .           	*/
         .           
         .           	t_stride		vertex;
         .           	uint8_t			block_type;
         .           
 2,018,666 ( 0.01%)  	block_type = water ? BT_WATER : switch_block_type(y);
52,901,687 ( 0.33%)  => src/generation/vertexs.c:switch_block_type (280,458x)
         .           	// Addition of 6 vertexs plane to the mesh's data stride
 6,475,106 ( 0.04%)  	for (unsigned int i = 0; i < 6; i++)
         .           	{
 8,829,690 ( 0.06%)  		ft_memset(&vertex, 0, sizeof(t_stride));
72,403,458 ( 0.45%)  => ???:ft_memset (1,765,938x)
         .           
         .           
 9,520,649 ( 0.06%)  		block_type = (block_type == BT_GRASS && side) ? BT_GRASS_SIDE : block_type;
 8,837,190 ( 0.06%)  		block_type = (block_type == BT_SNOW && side) ? BT_SNOW_SIDE : block_type;
         .           		// Constuction of the vertex
95,360,652 ( 0.60%)  		vertex = (t_stride){(short)plane[i].x, 
19,425,318 ( 0.12%)  							(short)plane[i].y,
19,425,318 ( 0.12%)  							(short)plane[i].z,
 7,063,752 ( 0.04%)  							(uint8_t)i,
 7,063,752 ( 0.04%)  							(uint8_t)((int)fall_size),
 7,063,752 ( 0.04%)  							(uint8_t)normal,
 5,297,814 ( 0.03%)  							(uint8_t)block_type,
         .           							(uint8_t)0};
         .           
         .           		// Insertion of the vertex in the stride
14,127,504 ( 0.09%)  		if (dynarray_push(&chunk->stride, &vertex, false))
515,883,161 ( 3.22%)  => ???:dynarray_push (1,765,938x)
         .           			return (ERR_MALLOC_FAILED);
         .           	}
   294,323 ( 0.00%)  	return (ERR_NONE);
 1,471,615 ( 0.01%)  }
         .           
         .           unsigned char	generate_top_plane(t_chunk *chunk, int x, int y, int z, vec3 top_plane[6])
   921,600 ( 0.01%)  {
         .           	vec3			a, b, c, d;
         .           
         .           	// Cube's top plane ABCD points
 1,126,400 ( 0.01%)  	a = (vec3){x, y, (z + 1)};
 1,331,200 ( 0.01%)  	b = (vec3){(x + 1), y, (z + 1)};
   921,600 ( 0.01%)  	c = (vec3){x, y, z};
 1,126,400 ( 0.01%)  	d = (vec3){(x + 1), y, z};
         .           
         .           	// ccw
   512,000 ( 0.00%)  	top_plane[0] = c;
   614,400 ( 0.00%)  	top_plane[1] = a;
   614,400 ( 0.00%)  	top_plane[2] = b;
   614,400 ( 0.00%)  	top_plane[3] = c;
   614,400 ( 0.00%)  	top_plane[4] = b;
   614,400 ( 0.00%)  	top_plane[5] = d;
         .           
 1,126,400 ( 0.01%)  	return (push_plane(chunk, top_plane, N_UP, y, 1.0f, false, false));
278,984,741 ( 1.74%)  => src/generation/vertexs.c:push_plane (102,400x)
   204,800 ( 0.00%)  }
         .           
         .           unsigned char	generate_fall(t_chunk *chunk, vec3 a, vec3 b, unsigned int index, unsigned int y, float depth)
 3,383,102 ( 0.02%)  {
 4,985,624 ( 0.03%)  	const vec3	c = vec_add(a, vec_fmult((vec3){0, -1.0f, 0}, depth));
 5,875,914 ( 0.04%)  => ???:vec_add (178,058x)
 4,807,566 ( 0.03%)  => ???:vec_fmult (178,058x)
 4,985,624 ( 0.03%)  	const vec3	d = vec_add(b, vec_fmult((vec3){0, -1.0f, 0}, depth));
 5,875,914 ( 0.04%)  => ???:vec_add (178,058x)
 4,807,566 ( 0.03%)  => ???:vec_fmult (178,058x)
         .           
 4,273,392 ( 0.03%)  	const vec3	side_plane_ccw[6]	= {c, a, b, c, b, d};
         .           	// apparement à n'utiliser que quand c'est left side
 4,273,392 ( 0.03%)  	const vec3	side_plane_cw[6]	= {c, b, a, c, d, b};
         .           
 2,358,141 ( 0.01%)  	return (push_plane(chunk, index == N_WEST ? side_plane_cw : side_plane_ccw,
551,245,468 ( 3.44%)  => src/generation/vertexs.c:push_plane (178,058x)
         .           		index, y, depth, true, false));
   890,290 ( 0.01%)  }
         .           
         .           # include "assert.h"
         .           
         .           static unsigned char	generate_deep_fall(t_chunk *chunk, vec3 a, vec3 b, unsigned int index, unsigned int offset, unsigned int y)
 1,542,359 ( 0.01%)  {
         .           	unsigned char	code;
         .           	uint8_t			prev_bt;
    90,727 ( 0.00%)  	unsigned int	n = 0;
   181,454 ( 0.00%)  	float			fall_size = 0.0f;
         .           
   636,937 ( 0.00%)  	while (n < offset)
         .           	{
   182,686 ( 0.00%)  		fall_size = 0.0f;
   456,715 ( 0.00%)  		prev_bt = switch_block_type(y - n);
17,237,577 ( 0.11%)  => src/generation/vertexs.c:switch_block_type (91,343x)
 1,330,104 ( 0.01%)  		while (n < offset && prev_bt == switch_block_type(y - n))
18,237,790 ( 0.11%)  => src/generation/vertexs.c:switch_block_type (96,658x)
         .           		{
   384,168 ( 0.00%)  			fall_size += 1.0f;
    96,042 ( 0.00%)  			n++;
         .           		}
         .           
   274,029 ( 0.00%)  		if (n < offset)
     6,776 ( 0.00%)  			fall_size += (float)(offset - n);
         .           
 1,644,174 ( 0.01%)  		if ((code = generate_fall(chunk, a, b, index, y, fall_size)))
304,742,459 ( 1.90%)  => src/generation/vertexs.c:generate_fall (91,343x)
         .           			return (code);
         .           	}
    90,727 ( 0.00%)  	return (ERR_NONE);
   272,181 ( 0.00%)  }
         .           
         .           unsigned char	generate_side_plane(t_chunk *chunk, uint8_t **hmap, int x, int y, int z, unsigned int size, vec3 top_plane[6])
 1,536,000 ( 0.01%)  {
         .           	unsigned char	code;
   819,200 ( 0.01%)  	const int		neighbours[4][2] =	{{0, 1},
         .           										 {0, -1},
         .           										 {1, 0},
         .           										 {-1, 0}};
         .           	// Based on cbacbd order
   409,600 ( 0.00%)  	const uint8_t	fall_planes[4][2] =	{{2, 1},
         .           										 {0, 5},
         .           										 {2, 5},
         .           										 {1, 0}};
         .           	vec3			a, b;
         .           	int				n_x, n_z;
         .           	int				offset;
         .           
 1,638,400 ( 0.01%)  	for (unsigned int i = 0; i < PO_MAX; i++)
         .           	{
 2,048,000 ( 0.01%)  		n_x = x + neighbours[i][0];
 2,048,000 ( 0.01%)  		n_z = z + neighbours[i][1];
         .           	
 4,070,400 ( 0.03%)  		if (n_x < 0 || n_x >= (int)size || n_z < 0 || n_z >= (int)size
 6,451,200 ( 0.04%)  			|| (offset = y - hmap[n_x][n_z]) <= 0)
   318,873 ( 0.00%)  			continue ;
         .           
 1,270,178 ( 0.01%)  		a = top_plane[fall_planes[i][0]];
 1,270,178 ( 0.01%)  		b = top_plane[fall_planes[i][1]];
         .           
 1,634,036 ( 0.01%)  		if ((offset == 1 && (code = generate_fall(chunk, a, b, i, y, 1.0f)))
280,629,140 ( 1.75%)  => src/generation/vertexs.c:generate_fall (85,446x)
 1,451,632 ( 0.01%)  			|| (code = generate_deep_fall(chunk, a, b, i, offset, y)))
347,406,905 ( 2.17%)  => src/generation/vertexs.c:generate_deep_fall (90,727x)
         .           			return (code);
         .           	}
   102,400 ( 0.00%)  	return (ERR_NONE);
   512,000 ( 0.00%)  }
         .           
         .           unsigned char	generate_bottom_plane(t_chunk *chunk, int x, int y, int z, vec3 top_plane[6])
         .           {
         .           	(void)chunk;
         .           	(void)x;
         .           	(void)y;
         .           	(void)z;
         .           	(void)top_plane;
-- line 188 ----------------------------------------

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./elf/../sysdeps/x86_64/dl-machine.h
  ./elf/./elf/dl-lookup.c
  ./elf/./elf/do-rel.h
  ./malloc/./malloc/malloc.c
  ./math/../sysdeps/ieee754/dbl-64/e_sqrt.c
  ./math/./math/w_sqrt_compat.c
  ./nptl/./nptl/pthread_mutex_lock.c
  ./nptl/./nptl/pthread_mutex_unlock.c
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S

--------------------------------------------------------------------------------
Ir                      
--------------------------------------------------------------------------------
11,290,344,244 (70.51%)  events annotated

